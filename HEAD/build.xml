<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="build" name="concurrency library">

	<property environment="env" />

	<property name="debuglevel" value="source,lines,vars" />
	<property name="target-version" value="1.6" />
	<property name="source-version" value="1.6" />
	<property name="release.dir" value="release" />
	<property name="jar.dir" value="jar" />
	<property name="compiled-classes.dir" value="bin" />
	<property name="source.dir" value="src" />
	<property name="build.xml" value="build.xml" />
	<property name="read-me.txt" value="README.txt" />

	<path id="concurrency library.classpath">
		<pathelement location="bin" />
		<pathelement location="lib/junit-4.4.jar" />
	</path>

	<target name="clean">
		<delete dir="${compiled-classes.dir}" />
		<delete dir="jar" />
		<delete dir="${release.dir}" />
	</target>

	<target depends="clean" name="cleanall" />

	<target depends="build-subprojects,build-project" name="build" />

	<target name="build-subprojects" />

	<target name="compile">
		<echo message="${ant.project.name}: Making bin directory" />
		<mkdir dir="${compiled-classes.dir}" />
		<echo message="${ant.project.name}: ${ant.file}" />
		<javac debug="true" debuglevel="${debuglevel}" destdir="${compiled-classes.dir}" source="${source-version}" target="${target-version}">
			<src path="src" />
			<classpath refid="concurrency library.classpath" />
		</javac>
	</target>

	<target depends="compile" name="jar">
		<echo message="${ant.project.name}: Making jar directory" />
		<mkdir dir="jar" />
		<echo message="${ant.project.name}: Making the jar..." />
		<jar destfile="jar/${ant.project.name}.jar" basedir="${compiled-classes.dir}" />
	</target>

	<target depends="jar,compile" name="build-project">
		<echo message="${ant.project.name}: Making release directory" />
		<mkdir dir="${release.dir}" />
		<echo message="${ant.project.name}: Copying stuff into the release folder..." />
		<mkdir dir="${compiled-classes.dir}" />
		<copy includeemptydirs="false" todir="${release.dir}/${source.dir}">
			<fileset dir="${source.dir}" excludes="**/.**" />
		</copy>
		<copy includeemptydirs="false" todir="${release.dir}/${source.dir}">
			<fileset dir="${source.dir}" excludes="**/.**" />
		</copy>
		<copy includeemptydirs="false" todir="${release.dir}/${jar.dir}">
			<fileset dir="${jar.dir}" excludes="**/.**" />
		</copy>
		<copy todir="${release.dir}" file="${build.xml}" />
		<copy todir="${release.dir}" file="${read-me.txt}" />
	</target>
</project>
